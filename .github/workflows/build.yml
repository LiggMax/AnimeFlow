name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: "Select platform to build"
        options:
          - android
          - ios
          - macos
          - windows
          - linux
          - all
        default: "all"

jobs:
  get-app-info:
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.get_app_info.outputs.app_name }}
      app_version: ${{ steps.get_app_info.outputs.app_version }}
      app_name_version: ${{ steps.get_app_info.outputs.app_name_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get app name and version
        id: get_app_info
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | sed 's/^name:[[:space:]]*//' | tr -d ' ')
          APP_VERSION=$(grep '^version:' pubspec.yaml | sed 's/^version:[[:space:]]*//' | tr -d ' ')
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "app_name_version=${APP_NAME}-${APP_VERSION}" >> $GITHUB_OUTPUT

  build-android:
    needs: get-app-info
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: |
          flutter --version
          flutter pub get

      - name: Build android
        run: |
          flutter build apk
          echo "Android build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-app-info.outputs.app_name_version }}-android
          path: build/app/outputs/flutter-apk/*.apk
          if-no-files-found: ignore

  build-linux:
    needs: get-app-info
    if: ${{ github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libasound2-dev libmpv-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: |
          flutter build linux
          echo "Linux build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-app-info.outputs.app_name_version }}-linux
          path: build/linux/
          if-no-files-found: ignore

  build-windows:
    needs: get-app-info
    if: ${{ github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all'}}
    runs-on: windows-2025
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: |
          flutter build windows
          echo "Windows build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-app-info.outputs.app_name_version }}-windows
          path: build/windows/x64/runner/Release/
          if-no-files-found: ignore

  build-macos:
    needs: get-app-info
    if: ${{ github.event.inputs.platform == 'macos' || github.event.inputs.platform == 'all' }}
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: |
          flutter build macos
          echo "macOS build completed"

      - name : Create DMG
        run: |
          mkdir -p build/dist
          cp -a build/macos/Build/Products/Release/${{ needs.get-app-info.outputs.app_name }}.app build/dist
          ln -s /Applications build/dist/Applications
          hdiutil create -fs HFS+ -volname ${{ needs.get-app-info.outputs.app_name_version }} -srcfolder build/dist ${{ needs.get-app-info.outputs.app_name_version }}.dmg

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-app-info.outputs.app_name_version }}-macos
          path: build/macos/Build/Products/Release/${{ needs.get-app-info.outputs.app_name }}.app
          if-no-files-found: ignore

  build-ios:
    needs: get-app-info
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all'}}
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: pubspec.yaml
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build IPA
        run: flutter build ios --release --no-codesign

      - name: Create IPA
        run: |
          mkdir Payload
          cp -R build/ios/iphoneos/Runner.app Payload/Runner.app
          zip -q -r ${{ needs.get-app-info.outputs.app_name_version }}.ipa Payload

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-app-info.outputs.app_name_version }}-ios
          path: ${{ needs.get-app-info.outputs.app_name_version }}.ipa
          if-no-files-found: ignore
