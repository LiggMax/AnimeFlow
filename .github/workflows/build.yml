name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: "Select platform to build"
        options:
          - android
          - ios
          - macos
          - windows
          - linux
          - all
        default: "all"

jobs:
  build-android:
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build android
        run: |
          flutter build apk
          echo "Android build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-android
          path: build/app/outputs/flutter-apk/*.apk
          if-no-files-found: ignore

  build-linux:
    if: ${{ github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libasound2-dev libmpv-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: |
          flutter build linux
          echo "Linux build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-linux
          path: build/linux/
          if-no-files-found: ignore

  build-windows:
    if: ${{ github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all'}}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          $APP_NAME = Select-String -Path pubspec.yaml -Pattern "^name:" | ForEach-Object { ($_ -split ":")[1].Trim() }
          echo "APP_NAME=$APP_NAME" >> $env:GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: |
          flutter build windows
          echo "Windows build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows
          path: build/windows/x64/runner/Release/
          if-no-files-found: ignore

  build-macos:
    if: ${{ github.event.inputs.platform == 'macos' || github.event.inputs.platform == 'all' }}
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: |
          flutter build macos
          echo "macOS build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos
          path: build/macos/Build//Build/Products/Release/AnimeFlow.app
          if-no-files-found: ignore

  build-ios:
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all'}}
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign
          echo "iOS build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-ios
          path: build/ios/archive/
          if-no-files-found: ignore
