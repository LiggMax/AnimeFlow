name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: "Select platform to build"
        options:
          - android
          - ios
          - macos
          - windows
          - linux
          - all
        default: "all"

jobs:
  build-android:
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | sed 's/^name:[[:space:]]*//' | tr -d ' ')
          if [ -z "$APP_NAME" ]; then
            APP_NAME="AnimeFlow"
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build android
        run: |
          flutter build apk
          echo "Android build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-android
          path: build/app/outputs/flutter-apk/*.apk
          if-no-files-found: ignore

  build-linux:
    if: ${{ github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libasound2-dev libmpv-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | sed 's/^name:[[:space:]]*//' | tr -d ' ')
          if [ -z "$APP_NAME" ]; then
            APP_NAME="AnimeFlow"
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: |
          flutter build linux
          echo "Linux build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-linux
          path: build/linux/
          if-no-files-found: ignore

  build-windows:
    if: ${{ github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all'}}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          $content = Get-Content pubspec.yaml -Raw
          $match = [regex]::Match($content, '^name:\s*(\S+)', [System.Text.RegularExpressions.RegexOptions]::Multiline)
          if ($match.Success) {
            $APP_NAME = $match.Groups[1].Value.Trim()
          } else {
            $APP_NAME = "AnimeFlow"
          }
          echo "APP_NAME=$APP_NAME" >> $env:GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: |
          flutter build windows
          echo "Windows build completed"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows
          path: build/windows/x64/runner/Release/
          if-no-files-found: ignore

  build-macos:
    if: ${{ github.event.inputs.platform == 'macos' || github.event.inputs.platform == 'all' }}
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Get app name
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | sed 's/^name:[[:space:]]*//' | tr -d ' ')
          if [ -z "$APP_NAME" ]; then
            APP_NAME="AnimeFlow"
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: |
          flutter build macos
          echo "macOS build completed"

      - name : Create DMG
        run: |
          mkdir -p build/dist
          cp -a build/macos/Build/Products/Release/AnimeFlow.app build/dist
          ln -s /Applications build/dist/Applications
          hdiutil create -fs HFS+ -volname ${{ env.APP_NAME }} -srcfolder build/dist ${{ env.APP_NAME }}.dmg

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos
          path: build/macos/Build/Products/Release/AnimeFlow.app
          if-no-files-found: ignore

  build-ios:
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all'}}
    runs-on: macos-14  # 使用 macOS 14 获得更新的 Xcode 版本
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'  # 指定兼容的 Xcode 版本

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.16.0'  # 明确指定 Flutter 版本

      - name: Get app name
        id: app_name
        run: |          
          APP_NAME=$(grep '^name:' pubspec.yaml | sed 's/^name:[[:space:]]*//' | tr -d ' ')
          if [ -z "$APP_NAME" ]; then
            APP_NAME="AnimeFlow"
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Clean build
        run: |
          flutter clean
          cd ios && rm -rf Pods Podfile.lock && cd ..
          flutter pub get

      - name: Pod install
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Build IPA
        run: |          
          flutter build ios --release --no-codesign --simulator
          echo "iOS build completed"

      - name: Create IPA
        run: |          
          mkdir -p Payload
          # 对于模拟器构建，使用 iphonesimulator 路径
          if [ -d "build/ios/iphonesimulator/Runner.app" ]; then
            cp -R build/ios/iphonesimulator/Runner.app Payload/Runner.app
          elif [ -d "build/ios/iphoneos/Runner.app" ]; then
            cp -R build/ios/iphoneos/Runner.app Payload/Runner.app
          else
            echo "Runner.app not found"
            ls -la build/ios/
            exit 1
          fi
          zip -q -r ${{ env.APP_NAME }}.ipa Payload

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-ios
          path: ${{ env.APP_NAME }}.ipa
          if-no-files-found: ignore
